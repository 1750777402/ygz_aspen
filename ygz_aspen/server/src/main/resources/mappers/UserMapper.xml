<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ygz.aspen.dao.UserMapper" >

    <resultMap id="BaseResultMap" type="com.ygz.aspen.model.sys.User">
        <id column="userId" property="userId" jdbcType="BIGINT"/>
        <id column="username" property="username" jdbcType="VARCHAR"/>
        <id column="usernick" property="usernick" jdbcType="VARCHAR"/>
        <id column="password" property="password" jdbcType="VARCHAR"/>
        <id column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <id column="phone" property="phone" jdbcType="VARCHAR"/>
        <id column="isDeleted" property="isDeleted" jdbcType="TINYINT"/>
        <id column="created" property="created" jdbcType="BIGINT"/>
        <id column="updated" property="updated" jdbcType="BIGINT"/>
    </resultMap>

    <insert id="addUser" parameterType="com.ygz.aspen.model.sys.User" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO
            `user`(`username`, `usernick`, `password`, `avatar`, `phone`, `isDeleted`, `created`, `updated`)
        VALUES
            (#{username,jdbcType=VARCHAR},
             #{usernick,jdbcType=VARCHAR},
             #{password,jdbcType=VARCHAR},
             #{avatar,jdbcType=VARCHAR},
             #{phone,jdbcType=VARCHAR},
             #{isDeleted,jdbcType=TINYINT},
             #{created,jdbcType=BIGINT},
             #{updated,jdbcType=BIGINT})
    </insert>

    <update id="delUser">
        UPDATE `user` SET isDeleted=1, updated=unix_timestamp() where userId = #{userId, jdbcType=BIGINT} limit 1
    </update>

    <update id="updateUser" parameterType="com.ygz.aspen.model.sys.User">
        UPDATE `user`
        <set>
            updated=unix_timestamp(),
            <if test="usernick != null and usernick != ''" >
                usernick = #{usernick,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null and avatar != ''" >
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="phone != null and phone != ''" >
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null" >
                isDeleted = #{isDeleted,jdbcType=TINYINT},
            </if>
        </set>
        where userId = #{userId, jdbcType=BIGINT}
        limit 1
    </update>

    <select id="getUserById" resultType="com.ygz.aspen.model.sys.User">
        select * from `User` where userId = #{userId,jdbcType=BIGINT}
    </select>

    <select id="getUserByUname" resultType="com.ygz.aspen.model.sys.User">
        select * from `User` where username = #{username,jdbcType=VARCHAR}
    </select>

    <select id="selectUserList" resultType="com.ygz.aspen.model.sys.User">
        select * from `User`
        where 1=1
        <if test="username != null">
            and username = #{username, jdbcType=VARCHAR}
        </if>
        <if test="usernick != null">
            and usernick = #{usernick, jdbcType=VARCHAR}
        </if>
        <if test="phone != null">
            and phone = #{phone, jdbcType=VARCHAR}
        </if>
        <if test="isDeleted != null">
            and isDeleted = #{isDeleted, jdbcType=TINYINT}
        </if>
        <if test="userIds != null">
            and userId in
            <foreach collection="userIds" open="(" separator="," close=")" item="uId">
                #{uId}
            </foreach>
        </if>
        <if test="orderByClause != null">
            order by #{orderByClause}
        </if>
        <if test="pageIndex != null and pageIndex >= 0 and pageSize != null and pageSize > 0">
            limit #{pageIndex}, #{pageSize}
        </if>
    </select>

    <select id="countUser" resultType="java.lang.Integer">
        select count(userId) from `User`
        where 1=1
        <if test="username != null">
            and username = #{username, jdbcType=VARCHAR}
        </if>
        <if test="usernick != null">
            and usernick = #{usernick, jdbcType=VARCHAR}
        </if>
        <if test="phone != null">
            and phone = #{phone, jdbcType=VARCHAR}
        </if>
        <if test="isDeleted != null">
            and isDeleted = #{isDeleted, jdbcType=TINYINT}
        </if>
        <if test="userIds != null">
            and userId in
            <foreach collection="userIds" open="(" separator="," close=")" item="uId">
                #{uId}
            </foreach>
        </if>
    </select>


</mapper>